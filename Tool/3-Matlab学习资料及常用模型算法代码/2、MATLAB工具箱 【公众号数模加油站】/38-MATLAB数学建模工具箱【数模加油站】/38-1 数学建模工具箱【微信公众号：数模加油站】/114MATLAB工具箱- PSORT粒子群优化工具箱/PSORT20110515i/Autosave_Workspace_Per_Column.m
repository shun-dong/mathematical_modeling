% When "OnOff_Autosave_Workspace_Per_Column" is active, this code will be called
% from within "RegPSO_main.m" to save the workspace after each
% table of data generated.

%   Copyright 2008, 2009, 2010, 2011 George I. Evers (moved from "RegPSO_main.m" on May 3, 2009).

DateString = datestr(now);
DateString(12) = '-';
DateString([15, 18]) = '.';
DateString(3) = [];
DateString(7) = [];
DateString(7) = [];
if OnOff_MPSO
    if max_num_groupings > 99999998
        if OnOff_func_evals
            if Reg_Method == 0
                if OnOff_w_linear == 0
                    save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                         ...
                        ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                else
                    save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                         ...
                        ',F', num2str(max_FEs_per_grouping), ',Fr', ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                end
            else %(i.e. Regrouping Case: include stag_threshold and regrouping factor in filename)
                if max_FEs_per_grouping == max_FEs_over_all_groupings
                    if Reg_Method ~= 2
                        if OnOff_num_gs_identical_b4_refinement
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        else %(i.e. !OnOff_num_gs_identical_b4_refinement which means that the regrouping factor will not change)
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        end
                    else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                else %(i.e. if max_FEs_per_grouping ~= max_FEs_over_all_groupings)
                    if Reg_Method ~= 2
                        if OnOff_num_gs_identical_b4_refinement
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        end
                    else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                end
            end
        else %i.e. if iterations are to be used instead of function evaluations
            if Reg_Method == 0
                if OnOff_w_linear == 0
                    save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                         ...
                        ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                else
                    save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                         ...
                        ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                end
            else %(i.e. Regrouping Case: include stag_threshold and regrouping factor in filename)
                if Reg_Method ~= 2
                    if OnOff_num_gs_identical_b4_refinement
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                    if OnOff_w_linear == 0
                        save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                            ',v_cl', num2str(OnOff_v_clamp),  ...
                            ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                            num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                    else
                        save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                            ',v_cl', num2str(OnOff_v_clamp),  ...
                            ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                            num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                    end
                end
            end
        end
    else %(i.e. max_num_groupings < 99999999, so display the number of groupings since it was chosen less than practically infinite)
        if OnOff_func_evals
            if Reg_Method == 0
                if OnOff_w_linear == 0
                    save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                        ',gr', num2str(max_num_groupings), ...
                        ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                else
                    save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                        ',gr', num2str(max_num_groupings), ...
                        ',F', num2str(max_FEs_per_grouping), ',Fr', ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                end
            else %(i.e. Regrouping Case: include stag_threshold and regrouping factor in filename)
                if max_FEs_over_all_groupings == max_FEs_per_grouping
                    if Reg_Method ~= 2
                        if OnOff_num_gs_identical_b4_refinement
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        end
                    else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                else %(i.e. max_FEs_over_all_groupings ~= max_FEs_per_grouping)
                    if Reg_Method ~= 2
                        if OnOff_num_gs_identical_b4_refinement
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        end
                    else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                end
            end
        else %i.e. if iterations are to be used instead of function evaluations
            if Reg_Method == 0
                if OnOff_w_linear == 0
                    save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                        ',gr', num2str(max_num_groupings), ...
                        ',k', num2str(max_iter_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                else
                    save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                        ',gr', num2str(max_num_groupings), ...
                        ',k', num2str(max_iter_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                end
            else %(i.e. Regrouping Case: include stag_threshold and regrouping factor in filename)
                if Reg_Method ~= 2
                    if OnOff_num_gs_identical_b4_refinement
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                    if OnOff_w_linear == 0
                        save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                            ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                            ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                            num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                    else
                        save(['Data/', DateString_dir, '/WS/MPSORM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                            ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                            ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                            num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                    end
                end
            end
        end
    end
else %i.e. MPSO inactive
    if max_num_groupings > 99999998
        if OnOff_func_evals
            if Reg_Method == 0
                if OnOff_w_linear == 0
                    save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                         ...
                        ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                else
                    save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                         ...
                        ',F', num2str(max_FEs_per_grouping), ',Fr', ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                end
            else %(i.e. Regrouping Case: include stag_threshold and regrouping factor in filename)
                if max_FEs_per_grouping == max_FEs_over_all_groupings
                    if Reg_Method ~= 2
                        if OnOff_num_gs_identical_b4_refinement
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        else %(i.e. !OnOff_num_gs_identical_b4_refinement which means that the regrouping factor will not change)
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        end
                    else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                else %(i.e. if max_FEs_per_grouping ~= max_FEs_over_all_groupings)
                    if Reg_Method ~= 2
                        if OnOff_num_gs_identical_b4_refinement
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp),  ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        end
                    else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                end
            end
        else %i.e. if iterations are to be used instead of function evaluations
            if Reg_Method == 0
                if OnOff_w_linear == 0
                    save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                         ...
                        ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                else
                    save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                         ...
                        ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                end
            else %(i.e. Regrouping Case: include stag_threshold and regrouping factor in filename)
                if Reg_Method ~= 2
                    if OnOff_num_gs_identical_b4_refinement
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp),  ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                    if OnOff_w_linear == 0
                        save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                            ',v_cl', num2str(OnOff_v_clamp),  ...
                            ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                            num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                    else
                        save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                            ',v_cl', num2str(OnOff_v_clamp),  ...
                            ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                            num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                    end
                end
            end
        end
    else %(i.e. max_num_groupings < 99999999, so display the number of groupings since it was chosen less than practically infinite)
        if OnOff_func_evals
            if Reg_Method == 0
                if OnOff_w_linear == 0
                    save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                        ',gr', num2str(max_num_groupings), ...
                        ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                else
                    save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                        ',gr', num2str(max_num_groupings), ...
                        ',F', num2str(max_FEs_per_grouping), ',Fr', ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                end
            else %(i.e. Regrouping Case: include stag_threshold and regrouping factor in filename)
                if max_FEs_over_all_groupings == max_FEs_per_grouping
                    if Reg_Method ~= 2
                        if OnOff_num_gs_identical_b4_refinement
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        end
                    else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',F', num2str(max_FEs_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                else %(i.e. max_FEs_over_all_groupings ~= max_FEs_per_grouping)
                    if Reg_Method ~= 2
                        if OnOff_num_gs_identical_b4_refinement
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                            if OnOff_w_linear == 0
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                            else
                                save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                    ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                    ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                    num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                            end
                        end
                    else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',F', num2str(max_FEs_per_grouping), ',Fr', num2str(max_FEs_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                end
            end
        else %i.e. if iterations are to be used instead of function evaluations
            if Reg_Method == 0
                if OnOff_w_linear == 0
                    save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                        ',gr', num2str(max_num_groupings), ...
                        ',k', num2str(max_iter_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                else
                    save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',v_cl', num2str(OnOff_v_clamp), ...
                        ',gr', num2str(max_num_groupings), ...
                        ',k', num2str(max_iter_per_grouping), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                        num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                end
            else %(i.e. Regrouping Case: include stag_threshold and regrouping factor in filename)
                if Reg_Method ~= 2
                    if OnOff_num_gs_identical_b4_refinement
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf0', num2str(Internal_reg_fact0_curr_column), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    else %(i.e. !OnOff_num_gs_identical_b4_refinement)
                        if OnOff_w_linear == 0
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                        else
                            save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ',rf', num2str(reg_fact), ...
                                ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                                ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                                num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                        end
                    end
                else %(i.e. "Reg_Method" == 2, so remove irrelevant "reg_fact" and "TableParams_Col_Incr_reg_fact")
                    if OnOff_w_linear == 0
                        save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                            ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                            ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                            num2str(vmax_perc), ',w', num2str(w), ',', DateString, '.mat'])
                    else
                        save(['Data/', DateString_dir, '/WS/RM', num2str(Reg_Method), 'C,', objective(1:2), ',d', num2str(dim), ',np', num2str(np), ',thr', num2str(stag_thresh), ...
                            ',v_cl', num2str(OnOff_v_clamp), ',gr', num2str(max_num_groupings), ...
                            ',k', num2str(max_iter_per_grouping), ',kr', num2str(max_iter_over_all_groupings), ',n', num2str(num_trials), ',ca', num2str(c1), ',cb', num2str(c2), ',vm%', ...
                            num2str(vmax_perc), 'w_i', num2str(w_i), ',w_f', num2str(w_f), ',', DateString, '.mat'])
                    end
                end
            end
        end
    end
end
clear DateString %Reduce workspace clutter by clearing this internally used variable once it has been used.