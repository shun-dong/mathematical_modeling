%When "OnOff_title" is activated in "Control_Panel.m," this code may be called
%from within "Graphs.m" to select a title specific to the parameters
%used to generate the data so that the title clearly states what data is being
%graphed without the need to manually add a title.

%   Copyright 2008, 2009, 2010, 2011 George I. Evers (moved from "Graphs.m" on May 3, 2009)

if OnOff_GCPSO
    if OnOff_OPSO
        if OnOff_Cauchy_mutation_of_global_best
            if OnOff_MPSO
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            else %i.e. multi-start of core algorithm not activated
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by
                                        %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        else %i.e. ~OnOff_Cauchy_mutation_of_global_best
            if OnOff_MPSO
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            else %i.e. multi-start of core algorithm not activated
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by
                                        %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    else %i.e. opposition-based PSO inactive
        if OnOff_Cauchy_mutation_of_global_best
            if OnOff_MPSO
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            else %i.e. multi-start of core algorithm not activated
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by
                                        %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        else %i.e. ~OnOff_Cauchy_mutation_of_global_best
            if OnOff_MPSO
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of "Guaranteed Convergence" PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            else %i.e. multi-start of core algorithm not activated
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by
                                        %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['"Guaranteed Convergence" PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], '"Guaranteed Convergence" PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
else %"guaranteed convergence" PSO inactive
    if OnOff_OPSO
        if OnOff_Cauchy_mutation_of_global_best
            if OnOff_MPSO
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of Gbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            else %i.e. multi-start of core algorithm not activated
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by
                                        %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Gbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        else %i.e. ~OnOff_Cauchy_mutation_of_global_best
            if OnOff_MPSO
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_lbest
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                            %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                    end
                                end
                            end
                        else %i.e. Gbest PSO
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                            %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                    end
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_lbest
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Lbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %i.e. Gbest PSO
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Gbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            else %i.e. multi-start of core algorithm not activated
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_lbest
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                            %['n_p = {', num2str(curr_table(1,1)), ' by
                                            %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                    end
                                end
                            end
                        else %i.e. Gbest PSO
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                            %['n_p = {', num2str(curr_table(1,1)), ' by
                                            %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                    end
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_lbest
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Lbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %i.e. Gbest PSO
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Gbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled',  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Opposition-based PSO Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    else %i.e. opposition-based PSO inactive
        if OnOff_Cauchy_mutation_of_global_best
            if OnOff_MPSO
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Multi-Start of Gbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            else %i.e. multi-start of core algorithm not activated
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                        ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        %['n_p = {', num2str(curr_table(1,1)), ' by
                                        %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_title
                            if TableParams_min_num_unique_columns == 1
                                if OnOff_w_linear
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                        ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                else
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ['n = ', num2str(num_trials)], ...
                                       [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                if OnOff_w_linear
                                    title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                        ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                        ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                            ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                    %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                        title({['Gbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled',  ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                            ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], 'Cauchy Mutation of Global Best Enabled', ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        else %i.e. ~OnOff_Cauchy_mutation_of_global_best
            if OnOff_MPSO
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_lbest
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                            %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                    end
                                end
                            end
                        else %i.e. Gbest PSO
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                            %['n_p = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 

                                    end
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_lbest
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Lbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %i.e. Gbest PSO
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Multi-Start of Gbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Multi-Start of Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            else %i.e. multi-start of core algorithm not activated
                if OnOff_func_evals %Find the correct title to display.
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_lbest
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                            %['n_p = {', num2str(curr_table(1,1)), ' by
                                            %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                    end
                                end
                            end
                        else %i.e. Gbest PSO
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                            ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                            ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)], ['F_m_a_x = ', num2str(max_FEs_per_grouping)], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                            %['n_p = {', num2str(curr_table(1,1)), ' by
                                            %', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 
                                    end
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_FEs_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_FEs_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_FEs_over_all_groupings >= max_FEs_per_grouping*max_num_groupings %(i.e. if max_FEs_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ['F_m_a_x = ', num2str(max_FEs_per_grouping), ' per grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_FEs_over_all_groupings < max_FEs_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'],...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ...
                                                    ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ' per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_FEs_over_all_groupings), ' FE''s Max'], ['with F_m_a_x = ', num2str(max_FEs_per_grouping), ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                else %i.e. if iterations are to be used instead of function evaluations
                    if Reg_Method == 0 %(i.e. for standard PSO)
                        if OnOff_lbest
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Lbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Lbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %i.e. Gbest PSO
                            if OnOff_title
                                if TableParams_min_num_unique_columns == 1
                                    if OnOff_w_linear
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                            ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ['n = ', num2str(num_trials)], ...
                                           [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby generating at least one table)
                                    if OnOff_w_linear
                                        title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                            ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                            ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_w %Multiple columns, static w, and w incremented with each column generated
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ...
                                                ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_reg_fact %Multiple columns, static w, and "reg_fact" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Gbest PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    elseif TableParams_OnOff_Col_Incr_np %Multiple columns, static w, and "np" incremented with each column generated.
                                        %(This could be done with varying w as well, but I haven't done that yet, so I haven't added the option.)
                                            title({['Gbest PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'],  ...
                                                ['n = ', num2str(num_trials)],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                    else %(i.e. if regrouping occurs)
                        if TableParams_min_num_unique_columns == 1
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %If "max_num_groupings" was chosen sufficiently small that "max_iter_over_all_groupings" cannot be reached
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %If "max_num_groupings" was chosen large enough that "max_iter_over_all_groupings" could possibly be reached (i.e. will be if no premature convergence termination criterion is enforced)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. presumably 1 trial)
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                else %(i.e. static "w")
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)],...
                                                ['w = ', num2str(w)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        else %(i.e. if TableParams_min_num_unique_columns ~= 1 thereby creating at least one table)
                            if max_iter_over_all_groupings >= max_iter_per_grouping*max_num_groupings %(i.e. if max_iter_over_all_groupings is unimportant)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                               [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)     
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials: Each of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)           
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. only 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'], ...
                                                   [num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    ['1 Trial of ', num2str(max_num_groupings), ' Groupings Max'],[num2str(max_iter_per_grouping), 'Iterations Max per Grouping'], ... 
                                                    ['c_1 = ', num2str(c1), ', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            else %(i.e. if max_iter_over_all_groupings < max_iter_per_grouping*max_num_groupings and therefore could cause termination)
                                if OnOff_w_linear
                                    if num_trials > 1
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'],...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else
                                        if OnOff_title
                                            title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                ['Linearly Varying Inertia: ', 'w_i = ', num2str(w_i), ', w_f = ', num2str(w_f)]}, 'FontSize', GraphParams_labeltitle_font_size)
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end    
                                else
                                    if num_trials > 1
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [num2str(num_trials), ' Trials of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Mean Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    else %(i.e. 1 trial per column)
                                        if OnOff_title
                                            if TableParams_OnOff_Col_Incr_w %If it is w that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ...
                                                    ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping'], ...
                                                    ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2)], ...
                                                    ['w = {', num2str(curr_table(1,1)), ' by ', num2str(TableParams_Col_Incr_w), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_reg_fact %If it is "reg_fact" that's incremented per column.
                                                title({['Regrouping PSO with ', num2str(np) ' Particles'], ['on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['reg_f_a_c_t = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_reg_fact), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            elseif TableParams_OnOff_Col_Incr_np %If it is "np" that's incremented per column.
                                                title({['Regrouping PSO on ', objective, ' of ', num2str(dim), ' Dimensions;'], ...
                                                    [' 1 Trial of ', num2str(max_iter_over_all_groupings), ' Iterations Max'], ['with ', num2str(max_iter_per_grouping), ' Iterations Max per Grouping', ... 
                                                    ' per Grouping'], ['c_1 = ', num2str(c1),', c_2 = ', num2str(c2), ', w = ', num2str(w)], ['n_p = {', num2str(curr_table(1,1)), ...
                                                    ' by ', num2str(TableParams_Col_Incr_np), ' to ', num2str(curr_table(1, Internal_unique_column_counter)), '}']}, 'FontSize', GraphParams_labeltitle_font_size)
                                            end
                                        end
                                        ylabel('Objective Function Value', 'FontSize', GraphParams_labeltitle_font_size)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end